// <auto-generated />
using System;
using Examen2.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen2.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20240727042253_examen")]
    partial class examen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen2.Database.Entities.ClienteEntity", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroIdentidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numero_Identidad");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente", "dbo");
                });

            modelBuilder.Entity("Examen2.Database.Entities.InfoPrestamoEntity", b =>
                {
                    b.Property<Guid>("IdAmortizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_amortizacion");

                    b.Property<decimal>("Abono")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("abono");

                    b.Property<decimal>("CuotaConSVSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cuota_con_svds");

                    b.Property<decimal>("CuotaSinSVSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cuota_sin_svds");

                    b.Property<int>("Dias")
                        .HasColumnType("int")
                        .HasColumnName("dias");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<Guid>("IdPrestamo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_prestamo");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("interes");

                    b.Property<int>("NoCuota")
                        .HasColumnType("int")
                        .HasColumnName("no_cuota");

                    b.Property<decimal>("SaldoPrincipal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saldo_principal");

                    b.HasKey("IdAmortizacion");

                    b.HasIndex("IdPrestamo");

                    b.ToTable("InfoPrestamos");
                });

            modelBuilder.Entity("Examen2.Database.Entities.PrestamoEntity", b =>
                {
                    b.Property<Guid>("IdPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_prestamo");

                    b.Property<DateTime>("FechaDesombolso")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_desembolso");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_autor");

                    b.Property<float>("Interes")
                        .HasColumnType("real")
                        .HasColumnName("interes");

                    b.Property<float>("Monto")
                        .HasColumnType("real")
                        .HasColumnName("monto");

                    b.Property<int>("Plazo")
                        .HasColumnType("int")
                        .HasColumnName("plaza");

                    b.HasKey("IdPrestamo");

                    b.HasIndex("IdCliente");

                    b.ToTable("datos_prestamo", "dbo");
                });

            modelBuilder.Entity("Examen2.Database.Entities.InfoPrestamoEntity", b =>
                {
                    b.HasOne("Examen2.Database.Entities.PrestamoEntity", "Prestamo")
                        .WithMany()
                        .HasForeignKey("IdPrestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("Examen2.Database.Entities.PrestamoEntity", b =>
                {
                    b.HasOne("Examen2.Database.Entities.ClienteEntity", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
